DEFINE FLOAT separation;
separation = 0.1;

DEFINE FLOAT calc_rpm;
calc_rpm = 0;

DEFINE FLOAT base; 
base = PID_max;

DEFINE INT dirn_debug;
dirn_debug = 1;

signal void pulse(void)
{
	unsigned long CLOCK;
	unsigned long delay;
	CLOCK = 3000000;
	base = PID_max;
	twatch(10);
	
	while(1)
	{
		delay = (unsigned long) (separation * CLOCK);
		delay = delay/2 - 2;
		
		if(calc_rpm == 0)
		{
			twatch(delay);
			twatch(delay);
		}
		if(dirn_debug == 1)
		{
			twatch(delay);
			port1 ^= (1<<20);
			twatch(delay);
			port1 ^= (1<<23);
		}
		else
		{
			twatch(delay);
			port1 ^= (1<<23);
			twatch(delay);
			port1 ^= (1<<20);
		}
		
		
	}	
}

signal void tst(void)
{
	unsigned long CLOCK;
	CLOCK = 3000000;

	twatch(10);
	
	while(1)
	{
		twatch(7500);
		port2 ^= 1;
	}	
}

FUNC void calcSeparation(void)
{
	calc_rpm = ((float) duty_set * rpm_max) / base;
	if(calc_rpm < 0)
	{
		calc_rpm = -calc_rpm;
		dirn_debug = -1;
	}
	else
		dirn_debug = 1;
	if(calc_rpm != 0)
		separation = (60/(calc_rpm * encoder_ppr * Edges));
}

FUNC void addDisturbance()
{
	base += PID_max/10;
	calcSeparation();
}

FUNC void remDisturbance()
{
	base = PID_max;
	calcSeparation();
}

BS \\PID_Final\MCPWM.c\MCPWMStart, 1, "calcSeparation()"
BS \\PID_Final\QEI.c\QEI_set_PPR, 1, "pulse()"
BS \\PID_Final\PID_main.c\128, 1, "slog >F:\\College\\AMC\\Projects\\PID\\autolog"

DEFINE BUTTON "Add Disturbance", "addDisturbance()"
DEFINE BUTTON "Clear Disturbance", "remDisturbance()"
DEFINE BUTTON "Stop Logging", "slog off"
